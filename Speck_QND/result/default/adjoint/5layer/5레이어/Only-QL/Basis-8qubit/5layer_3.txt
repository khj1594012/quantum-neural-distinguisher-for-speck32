hj@DESKTOP-FLFN9KT:~/SPECK$ python3 5layers_8qubit_nodense.py
2023-03-07 15:48:08.882620: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-03-07 15:48:08.952054: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-03-07 15:48:09.294569: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/cuda-11.2/lib64
2023-03-07 15:48:09.294625: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/cuda-11.2/lib64
2023-03-07 15:48:09.294630: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-03-07 15:48:10.253715: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-03-07 15:48:10.258451: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-03-07 15:48:10.258650: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-03-07 15:48:10.258929: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-03-07 15:48:10.260562: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-03-07 15:48:10.260755: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-03-07 15:48:10.260934: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-03-07 15:48:10.719553: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-03-07 15:48:10.719762: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-03-07 15:48:10.719787: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1700] Could not identify NUMA node of platform GPU id 0, defaulting to 0.  Your kernel may not have been built with NUMA support.
2023-03-07 15:48:10.719980: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-03-07 15:48:10.720023: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13344 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 4080, pci bus id: 0000:01:00.0, compute capability: 8.9
Model: "model"
__________________________________________________________________________________________________
 Layer (type)                   Output Shape         Param #     Connected to
==================================================================================================
 input_1 (InputLayer)           [(None, 64)]         0           []

 tf.split (TFOpLambda)          [(None, 8),          0           ['input_1[0][0]']
                                 (None, 8),
                                 (None, 8),
                                 (None, 8),
                                 (None, 8),
                                 (None, 8),
                                 (None, 8),
                                 (None, 8)]

 keras_layer_1 (KerasLayer)     (None, 8)            40          ['tf.split[0][0]']

 keras_layer_2 (KerasLayer)     (None, 8)            40          ['tf.split[0][1]']

 keras_layer_3 (KerasLayer)     (None, 8)            40          ['tf.split[0][2]']

 keras_layer_4 (KerasLayer)     (None, 8)            40          ['tf.split[0][3]']

 keras_layer_5 (KerasLayer)     (None, 8)            40          ['tf.split[0][4]']

 keras_layer_6 (KerasLayer)     (None, 8)            40          ['tf.split[0][5]']

 keras_layer_7 (KerasLayer)     (None, 8)            40          ['tf.split[0][6]']

 keras_layer_8 (KerasLayer)     (None, 8)            40          ['tf.split[0][7]']

 tf.concat (TFOpLambda)         (None, 64)           0           ['keras_layer_1[0][0]',
                                                                  'keras_layer_2[0][0]',
                                                                  'keras_layer_3[0][0]',
                                                                  'keras_layer_4[0][0]',
                                                                  'keras_layer_5[0][0]',
                                                                  'keras_layer_6[0][0]',
                                                                  'keras_layer_7[0][0]',
                                                                  'keras_layer_8[0][0]']

 dense_1 (Dense)                (None, 1)            65          ['tf.concat[0][0]']

==================================================================================================
Total params: 385
Trainable params: 385
Non-trainable params: 0
__________________________________________________________________________________________________
Epoch 1/10
2023-03-07 15:48:21.083271: I tensorflow/compiler/xla/service/service.cc:173] XLA service 0x20d51e00 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2023-03-07 15:48:21.083304: I tensorflow/compiler/xla/service/service.cc:181]   StreamExecutor device (0): NVIDIA GeForce RTX 4080, Compute Capability 8.9
2023-03-07 15:48:21.086603: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:268] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2023-03-07 15:48:21.128993: W tensorflow/compiler/xla/stream_executor/gpu/asm_compiler.cc:234] Falling back to the CUDA driver for PTX compilation; ptxas does not support CC 8.9
2023-03-07 15:48:21.129020: W tensorflow/compiler/xla/stream_executor/gpu/asm_compiler.cc:237] Used ptxas at ptxas
2023-03-07 15:48:21.129052: W tensorflow/compiler/xla/service/gpu/nvptx_compiler.cc:281] Couldn't read CUDA driver version.
2023-03-07 15:48:21.129472: I tensorflow/compiler/jit/xla_compilation_cache.cc:477] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
WARNING:tensorflow:5 out of the last 5 calls to <function _BaseOptimizer._update_step_xla at 0x7f50dc126dc0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
WARNING:tensorflow:5 out of the last 5 calls to <function _BaseOptimizer._update_step_xla at 0x7f50dc126dc0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
WARNING:tensorflow:6 out of the last 6 calls to <function _BaseOptimizer._update_step_xla at 0x7f50dc126dc0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
WARNING:tensorflow:6 out of the last 6 calls to <function _BaseOptimizer._update_step_xla at 0x7f50dc126dc0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
313/313 - 3534s - loss: 0.7314 - acc: 0.4983 - val_loss: 0.7093 - val_acc: 0.5174 - 3534s/epoch - 11s/step
Epoch 2/10
313/313 - 3514s - loss: 0.7050 - acc: 0.5065 - val_loss: 0.6990 - val_acc: 0.5158 - 3514s/epoch - 11s/step
Epoch 3/10
313/313 - 3527s - loss: 0.6972 - acc: 0.5071 - val_loss: 0.6960 - val_acc: 0.5124 - 3527s/epoch - 11s/step
Epoch 4/10
313/313 - 3498s - loss: 0.6942 - acc: 0.5111 - val_loss: 0.6949 - val_acc: 0.5116 - 3498s/epoch - 11s/step
Epoch 5/10
313/313 - 3487s - loss: 0.6930 - acc: 0.5134 - val_loss: 0.6946 - val_acc: 0.5084 - 3487s/epoch - 11s/step
Epoch 6/10
313/313 - 3471s - loss: 0.6922 - acc: 0.5197 - val_loss: 0.6945 - val_acc: 0.5128 - 3471s/epoch - 11s/step
Epoch 7/10
313/313 - 3470s - loss: 0.6918 - acc: 0.5230 - val_loss: 0.6945 - val_acc: 0.5128 - 3470s/epoch - 11s/step
Epoch 8/10
313/313 - 3520s - loss: 0.6915 - acc: 0.5256 - val_loss: 0.6945 - val_acc: 0.5124 - 3520s/epoch - 11s/step
Epoch 9/10
313/313 - 3565s - loss: 0.6913 - acc: 0.5263 - val_loss: 0.6946 - val_acc: 0.5062 - 3565s/epoch - 11s/step
Epoch 10/10
313/313 - 3447s - loss: 0.6911 - acc: 0.5276 - val_loss: 0.6947 - val_acc: 0.5076 - 3447s/epoch - 11s/step
32/32 [==============================] - 128s 4s/step
0.498