hj@DESKTOP-FLFN9KT:~/SPECK$ python3 ds1_16qubit.py
2023-02-28 17:42:10.116347: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-02-28 17:42:10.194767: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-02-28 17:42:10.539013: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/cuda-11.2/lib64
2023-02-28 17:42:10.539086: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/cuda-11.2/lib64
2023-02-28 17:42:10.539103: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-02-28 17:42:11.522917: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-02-28 17:42:11.527795: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-02-28 17:42:11.527965: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-02-28 17:42:11.528228: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-02-28 17:42:11.529958: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-02-28 17:42:11.530133: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-02-28 17:42:11.530262: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-02-28 17:42:11.968752: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-02-28 17:42:11.968960: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-02-28 17:42:11.968985: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1700] Could not identify NUMA node of platform GPU id 0, defaulting to 0.  Your kernel may not have been built with NUMA support.
2023-02-28 17:42:11.969162: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-02-28 17:42:11.969215: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13344 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 4080, pci bus id: 0000:01:00.0, compute capability: 8.9
Model: "model"
__________________________________________________________________________________________________
 Layer (type)                   Output Shape         Param #     Connected to
==================================================================================================
 input_1 (InputLayer)           [(None, 64)]         0           []

 tf.split (TFOpLambda)          [(None, 16),         0           ['input_1[0][0]']
                                 (None, 16),
                                 (None, 16),
                                 (None, 16)]

 keras_layer_1 (KerasLayer)     (None, 16)           240         ['tf.split[0][0]']

 keras_layer_2 (KerasLayer)     (None, 16)           240         ['tf.split[0][1]']

 keras_layer_3 (KerasLayer)     (None, 16)           240         ['tf.split[0][2]']

 keras_layer_4 (KerasLayer)     (None, 16)           240         ['tf.split[0][3]']

 tf.concat (TFOpLambda)         (None, 64)           0           ['keras_layer_1[0][0]',
                                                                  'keras_layer_2[0][0]',
                                                                  'keras_layer_3[0][0]',
                                                                  'keras_layer_4[0][0]']

 dense_1 (Dense)                (None, 64)           4160        ['tf.concat[0][0]']

 batch_normalization (BatchNorm  (None, 64)          256         ['dense_1[0][0]']
 alization)

 activation (Activation)        (None, 64)           0           ['batch_normalization[0][0]']

 dense_3 (Dense)                (None, 1)            65          ['activation[0][0]']

==================================================================================================
Total params: 5,441
Trainable params: 5,313
Non-trainable params: 128
__________________________________________________________________________________________________
Epoch 1/10
2023-02-28 17:42:47.871991: I tensorflow/compiler/xla/service/service.cc:173] XLA service 0x251d49b0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2023-02-28 17:42:47.872020: I tensorflow/compiler/xla/service/service.cc:181]   StreamExecutor device (0): NVIDIA GeForce RTX 4080, Compute Capability 8.9
2023-02-28 17:42:47.875660: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:268] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2023-02-28 17:42:47.923910: W tensorflow/compiler/xla/stream_executor/gpu/asm_compiler.cc:234] Falling back to the CUDA driver for PTX compilation; ptxas does not support CC 8.9
2023-02-28 17:42:47.923941: W tensorflow/compiler/xla/stream_executor/gpu/asm_compiler.cc:237] Used ptxas at ptxas
2023-02-28 17:42:47.923989: W tensorflow/compiler/xla/service/gpu/nvptx_compiler.cc:281] Couldn't read CUDA driver version.
2023-02-28 17:42:47.924525: I tensorflow/compiler/jit/xla_compilation_cache.cc:477] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
WARNING:tensorflow:5 out of the last 5 calls to <function _BaseOptimizer._update_step_xla at 0x7f869c24cdc0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
WARNING:tensorflow:5 out of the last 5 calls to <function _BaseOptimizer._update_step_xla at 0x7f869c24cdc0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
WARNING:tensorflow:6 out of the last 6 calls to <function _BaseOptimizer._update_step_xla at 0x7f869c24cdc0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
WARNING:tensorflow:6 out of the last 6 calls to <function _BaseOptimizer._update_step_xla at 0x7f869c24cdc0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
313/313 - 12396s - loss: 0.7226 - acc: 0.4940 - val_loss: 0.7011 - val_acc: 0.5008 - 12396s/epoch - 40s/step
Epoch 2/10



313/313 - 13691s - loss: 0.6958 - acc: 0.5228 - val_loss: 0.7061 - val_acc: 0.4968 - 13691s/epoch - 44s/step
Epoch 3/10
313/313 - 12752s - loss: 0.6881 - acc: 0.5463 - val_loss: 0.7075 - val_acc: 0.4918 - 12752s/epoch - 41s/step
Epoch 4/10
313/313 - 12388s - loss: 0.6822 - acc: 0.5624 - val_loss: 0.7092 - val_acc: 0.4946 - 12388s/epoch - 40s/step
Epoch 5/10


313/313 - 12403s - loss: 0.6764 - acc: 0.5727 - val_loss: 0.7137 - val_acc: 0.4944 - 12403s/epoch - 40s/step
Epoch 6/10
313/313 - 12349s - loss: 0.6712 - acc: 0.5840 - val_loss: 0.7128 - val_acc: 0.4902 - 12349s/epoch - 39s/step
Epoch 7/10
313/313 - 12386s - loss: 0.6656 - acc: 0.5976 - val_loss: 0.7161 - val_acc: 0.4908 - 12386s/epoch - 40s/step
Epoch 8/10
313/313 - 12504s - loss: 0.6610 - acc: 0.6072 - val_loss: 0.7158 - val_acc: 0.4926 - 12504s/epoch - 40s/step
Epoch 9/10
313/313 - 14795s - loss: 0.6548 - acc: 0.6112 - val_loss: 0.7205 - val_acc: 0.4942 - 14795s/epoch - 47s/step
Epoch 10/10
313/313 - 12477s - loss: 0.6501 - acc: 0.6270 - val_loss: 0.7262 - val_acc: 0.4922 - 12477s/epoch - 40s/step
32/32 [==============================] - 343s 11s/step
0.474